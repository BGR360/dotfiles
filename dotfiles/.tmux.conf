# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# force a reload of the config file
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# 0 is too far from ` ;)
set -g base-index 1

# Update environment variables whenever new sessions are created/attached
set -g update-environment -r

# Hopefully get all windows to use the same SSH agent
setenv -g SSH_AUTH_SOCK ${HOME}/.ssh/ssh-auth-sock

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Allow mousey mousey
setw -g mouse on

# Seamless navigation of vim and tmux panes
# Use Ctrl+h/j/k/l to switch panes
# Manually copied from christoomey/vim-tmux-navigator and modified
# to use select-pane-no-wrap (because I don't like that behavior).
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "run '#{select_pane_no_wrap} L'"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "run '#{select_pane_no_wrap} D'"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "run '#{select_pane_no_wrap} U'"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "run '#{select_pane_no_wrap} R'"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -T copy-mode-vi C-h "run '#{select_pane_no_wrap} L'"
# bind-key -T copy-mode-vi C-j "run '#{select_pane_no_wrap} D'"
# bind-key -T copy-mode-vi C-k "run '#{select_pane_no_wrap} U'"
# bind-key -T copy-mode-vi C-l "run '#{select_pane_no_wrap} R'"
# bind-key -T copy-mode-vi C-\ select-pane -l

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Also Alt-hl to switch windows (only on Mac)
bind -n ˙ previous-window
bind -n ¬ next-window

# Prefix + < > to shift window order
bind < swap-window -t -1
bind > swap-window -t +1

# Prefix + s to choose a different session interactively
bind s choose-tree -s -w -Z

# Rebind prefix+c to create a new window
# -a inserts the window to the right of the current window
# -P prints some information about it once created
# -c sets the start directory
bind c new-window -a -c '#{pane_current_path}' #-P

# Prefix+Shift+X to force kill a pane
bind X kill-pane

# No delay for escape key press
set -sg escape-time 0

# clear the current pane (but send ctrl-n to vim windows)
bind-key -n C-n if-shell "$is_vim" "send-keys C-n" "send-keys C-l \; clear-history"
# bind -n C-n send-keys C-l \; clear-history

# Better key bindings for splitting panes
# Also, make them start in the same directory as the current pane
bind-key v split-window -h -c '#{pane_current_path}'
bind-key h split-window -v -c '#{pane_current_path}'

# Even out windows horizontally and vertically
bind-key + select-layout even-vertical
bind-key = select-layout even-horizontal

# Quick window resize options
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Enable focus events so that vim's autoread can work
set -g focus-events on

################################################################
##################### Tmux Plugin Manager ######################
################################################################

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Gruvbox colorscheme
set -g @plugin 'egel/tmux-gruvbox'

# Tmux resurrect: persist sessions after reboot
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'on'

# Tmux continuum: automatically save tmux sessions for tmux resurrect
# NOTE: Enable these if you want them
#set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @continuum-boot 'on'
#set -g @continuum-restore 'on'
#set -g @continuum-save-interval '3600'

set -g @plugin 'dalejung/tmux-select-pane-no-wrap'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

